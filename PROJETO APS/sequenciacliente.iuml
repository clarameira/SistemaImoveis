@startuml "Reserva de Imóvel - Cliente"
hide footbox

actor Cliente as cliente
participant TelaGerenciamentoImoveis as tela_busca_imoveis
participant ControleImovel as controle_imovel
participant TelaDetalhesImovel as tela_detalhes_imovel
participant Imovel as imovel
participant ControleReserva as controle_reserva
participant Reserva as reserva
participant Pagamento as pagamento
database BD as bd

cliente -> tela_busca_imoveis: exibirListaImoveis(listaImoveis: List<Imovel>): void
activate tela_busca_imoveis

tela_busca_imoveis -> controle_imovel: obterListaImoveis() :List<Imovel>
activate controle_imovel

controle_imovel -> bd: consultarImoveis(filtros: String): List<Imovel>
activate bd
bd --> controle_imovel
deactivate bd

controle_imovel --> tela_busca_imoveis
deactivate controle_imovel

--Abrir TelaDetalhesImovel aqui ao invés de continuar na TelaGerenciamentoImoveis--
tela_busca_imoveis -> tela_detalhes_imovel: selecionarImovel(id_imovel: String): void
activate tela_detalhes_imovel

tela_detalhes_imovel -> controle_imovel: exibirDetalhesImovel(detalhesImovel: Imovel): void
activate controle_imovel

controle_imovel -> bd: buscarDetalhesImovel(id_imovel: String): Imovel
activate bd
bd --> controle_imovel
deactivate bd

controle_imovel -> imovel: <<create>>
activate imovel

controle_imovel --> tela_detalhes_imovel
deactivate controle_imovel

tela_detalhes_imovel -> controle_reserva: reservarImovel(id_imovel: Integer, datas: List<String>): Boolean
activate controle_reserva

controle_reserva -> reserva: <<create>>
activate reserva

controle_reserva -> pagamento: selecionarMetodoPagamento(metodo: String)
activate pagamento

pagamento -> bd: processarPagamento(dados: String): Boolean
activate bd
bd --> pagamento
deactivate bd

pagamento --> controle_reserva
deactivate pagamento

controle_reserva --> tela_detalhes_imovel
deactivate controle_reserva

deactivate tela_detalhes_imovel
@enduml
